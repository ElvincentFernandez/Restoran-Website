{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROJECT REACT\\\\restoran\\\\src\\\\Components\\\\menu\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './menu.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Menu() {\n  _s();\n  const [pizzas, setPizzas] = useState([]);\n  const [burgers, setBurgers] = useState([]);\n  const [pastas, setPastas] = useState([]);\n  const [editIndex, setEditIndex] = useState({\n    type: null,\n    index: null\n  });\n  const API_URL = 'http://localhost/menu-api.php';\n\n  // Fetch data dari API\n  useEffect(() => {\n    fetchItems('pizza', setPizzas);\n    fetchItems('burger', setBurgers);\n    fetchItems('pasta', setPastas);\n  }, []);\n  const fetchItems = async (type, setState) => {\n    try {\n      const response = await fetch(`${API_URL}?type=${type}`);\n      const result = await response.json();\n      if (result.status === 'success') {\n        setState(result.data);\n      } else {\n        console.error(`Error fetching ${type}:`, result.message);\n      }\n    } catch (error) {\n      console.error(`Error fetching ${type}:`, error);\n    }\n  };\n\n  // Enable Edit Mode\n  const handleEditMode = (type, index) => {\n    setEditIndex({\n      type,\n      index\n    });\n  };\n\n  // Save Changes to API\n  const handleSave = async (type, index) => {\n    const item = getItemByType(type, index);\n    try {\n      const response = await fetch(API_URL, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          type,\n          id: item.id,\n          ...item\n        })\n      });\n      const result = await response.json();\n      if (result.status === 'success') {\n        setEditIndex({\n          type: null,\n          index: null\n        });\n        fetchItems(type, getSetStateFunction(type));\n      } else {\n        console.error(`Error saving ${type}:`, result.message);\n      }\n    } catch (error) {\n      console.error(`Error saving ${type}:`, error);\n    }\n  };\n\n  // Handle Input Changes\n  const handleChange = (type, index, field, value) => {\n    const setState = getSetStateFunction(type);\n    const items = getItemsByType(type);\n    const updatedItems = [...items];\n    updatedItems[index] = {\n      ...updatedItems[index],\n      [field]: value\n    };\n    setState(updatedItems);\n  };\n\n  // Delete Item\n  const handleDelete = async (type, index) => {\n    const item = getItemByType(type, index);\n    try {\n      const response = await fetch(API_URL, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          type,\n          id: item.id\n        })\n      });\n      const result = await response.json();\n      if (result.status === 'success') {\n        fetchItems(type, getSetStateFunction(type));\n      } else {\n        console.error(`Error deleting ${type}:`, result.message);\n      }\n    } catch (error) {\n      console.error(`Error deleting ${type}:`, error);\n    }\n  };\n\n  // Add Item to API\n  const handleAddItem = async type => {\n    const newItem = getDefaultItem(type);\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          type,\n          ...newItem\n        })\n      });\n      const result = await response.json();\n      if (result.status === 'success') {\n        fetchItems(type, getSetStateFunction(type));\n      } else {\n        console.error(`Error adding ${type}:`, result.message);\n      }\n    } catch (error) {\n      console.error(`Error adding ${type}:`, error);\n    }\n  };\n\n  // Utility Functions\n  const getDefaultItem = type => {\n    if (type === 'pizza') {\n      return {\n        name: 'New Pizza',\n        description: 'A delicious new pizza!',\n        price: '$12.99',\n        image: 'https://via.placeholder.com/150'\n      };\n    }\n    if (type === 'burger') {\n      return {\n        name: 'New Burger',\n        description: 'A tasty new burger!',\n        price: '$8.99',\n        image: 'https://via.placeholder.com/150'\n      };\n    }\n    if (type === 'pasta') {\n      return {\n        name: 'New Pasta',\n        description: 'A savory new pasta!',\n        price: '$10.99',\n        image: 'https://via.placeholder.com/150'\n      };\n    }\n    return {};\n  };\n  const getItemsByType = type => {\n    if (type === 'pizza') return pizzas;\n    if (type === 'burger') return burgers;\n    if (type === 'pasta') return pastas;\n    return [];\n  };\n  const getSetStateFunction = type => {\n    if (type === 'pizza') return setPizzas;\n    if (type === 'burger') return setBurgers;\n    if (type === 'pasta') return setPastas;\n    return () => {};\n  };\n  const getItemByType = (type, index) => getItemsByType(type)[index];\n\n  // Render Function\n  const renderItems = (type, items, setState) => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"menu-category\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [type.charAt(0).toUpperCase() + type.slice(1), \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: () => handleAddItem(type),\n      children: [\"Add \", type.charAt(0).toUpperCase() + type.slice(1)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-items\",\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: item.name,\n          className: \"menu-item-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-item-details\",\n          children: [editIndex.type === type && editIndex.index === index ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: item.name,\n              onChange: e => handleChange(type, index, 'name', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: item.description,\n              onChange: e => handleChange(type, index, 'description', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-btn\",\n              onClick: () => handleSave(type, index),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => handleEditMode(type, index),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => handleDelete(type, index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"menu-item-price\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [renderItems('pizza', pizzas, setPizzas), renderItems('burger', burgers, setBurgers), renderItems('pasta', pastas, setPastas)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(Menu, \"Pl0OpQWXpy67l4+Fz2ihE0rGg/k=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Menu","_s","pizzas","setPizzas","burgers","setBurgers","pastas","setPastas","editIndex","setEditIndex","type","index","API_URL","fetchItems","setState","response","fetch","result","json","status","data","console","error","message","handleEditMode","handleSave","item","getItemByType","method","headers","body","JSON","stringify","id","getSetStateFunction","handleChange","field","value","items","getItemsByType","updatedItems","handleDelete","handleAddItem","newItem","getDefaultItem","name","description","price","image","renderItems","className","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","src","alt","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/PROJECT REACT/restoran/src/Components/menu/Menu.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './menu.scss';\r\n\r\n\r\nfunction Menu() {\r\n  const [pizzas, setPizzas] = useState([]);\r\n  const [burgers, setBurgers] = useState([]);\r\n  const [pastas, setPastas] = useState([]);\r\n  const [editIndex, setEditIndex] = useState({ type: null, index: null });\r\n\r\n  const API_URL = 'http://localhost/menu-api.php';\r\n\r\n  // Fetch data dari API\r\n  useEffect(() => {\r\n    fetchItems('pizza', setPizzas);\r\n    fetchItems('burger', setBurgers);\r\n    fetchItems('pasta', setPastas);\r\n  }, []);\r\n\r\n  const fetchItems = async (type, setState) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}?type=${type}`);\r\n      const result = await response.json();\r\n      if (result.status === 'success') {\r\n        setState(result.data);\r\n      } else {\r\n        console.error(`Error fetching ${type}:`, result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching ${type}:`, error);\r\n    }\r\n  };\r\n\r\n  // Enable Edit Mode\r\n  const handleEditMode = (type, index) => {\r\n    setEditIndex({ type, index });\r\n  };\r\n\r\n  // Save Changes to API\r\n  const handleSave = async (type, index) => {\r\n    const item = getItemByType(type, index);\r\n    try {\r\n      const response = await fetch(API_URL, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ type, id: item.id, ...item }),\r\n      });\r\n      const result = await response.json();\r\n      if (result.status === 'success') {\r\n        setEditIndex({ type: null, index: null });\r\n        fetchItems(type, getSetStateFunction(type));\r\n      } else {\r\n        console.error(`Error saving ${type}:`, result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error saving ${type}:`, error);\r\n    }\r\n  };\r\n\r\n  // Handle Input Changes\r\n  const handleChange = (type, index, field, value) => {\r\n    const setState = getSetStateFunction(type);\r\n    const items = getItemsByType(type);\r\n    const updatedItems = [...items];\r\n    updatedItems[index] = { ...updatedItems[index], [field]: value };\r\n    setState(updatedItems);\r\n  };\r\n\r\n  // Delete Item\r\n  const handleDelete = async (type, index) => {\r\n    const item = getItemByType(type, index);\r\n    try {\r\n      const response = await fetch(API_URL, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ type, id: item.id }),\r\n      });\r\n      const result = await response.json();\r\n      if (result.status === 'success') {\r\n        fetchItems(type, getSetStateFunction(type));\r\n      } else {\r\n        console.error(`Error deleting ${type}:`, result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error deleting ${type}:`, error);\r\n    }\r\n  };\r\n\r\n  // Add Item to API\r\n  const handleAddItem = async (type) => {\r\n    const newItem = getDefaultItem(type);\r\n    try {\r\n      const response = await fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ type, ...newItem }),\r\n      });\r\n      const result = await response.json();\r\n      if (result.status === 'success') {\r\n        fetchItems(type, getSetStateFunction(type));\r\n      } else {\r\n        console.error(`Error adding ${type}:`, result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error adding ${type}:`, error);\r\n    }\r\n  };\r\n\r\n  // Utility Functions\r\n  const getDefaultItem = (type) => {\r\n    if (type === 'pizza') {\r\n      return { name: 'New Pizza', description: 'A delicious new pizza!', price: '$12.99', image: 'https://via.placeholder.com/150' };\r\n    }\r\n    if (type === 'burger') {\r\n      return { name: 'New Burger', description: 'A tasty new burger!', price: '$8.99', image: 'https://via.placeholder.com/150' };\r\n    }\r\n    if (type === 'pasta') {\r\n      return { name: 'New Pasta', description: 'A savory new pasta!', price: '$10.99', image: 'https://via.placeholder.com/150' };\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const getItemsByType = (type) => {\r\n    if (type === 'pizza') return pizzas;\r\n    if (type === 'burger') return burgers;\r\n    if (type === 'pasta') return pastas;\r\n    return [];\r\n  };\r\n\r\n  const getSetStateFunction = (type) => {\r\n    if (type === 'pizza') return setPizzas;\r\n    if (type === 'burger') return setBurgers;\r\n    if (type === 'pasta') return setPastas;\r\n    return () => {};\r\n  };\r\n\r\n  const getItemByType = (type, index) => getItemsByType(type)[index];\r\n\r\n  // Render Function\r\n  const renderItems = (type, items, setState) => (\r\n    <section className=\"menu-category\">\r\n      <h2>{type.charAt(0).toUpperCase() + type.slice(1)}s</h2>\r\n      <hr />\r\n      <button className=\"add-btn\" onClick={() => handleAddItem(type)}>Add {type.charAt(0).toUpperCase() + type.slice(1)}</button>\r\n      <div className=\"menu-items\">\r\n        {items.map((item, index) => (\r\n          <div key={index} className=\"menu-item\">\r\n            <img src={item.image} alt={item.name} className=\"menu-item-image\" />\r\n            <div className=\"menu-item-details\">\r\n              {editIndex.type === type && editIndex.index === index ? (\r\n                <>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={item.name}\r\n                    onChange={(e) => handleChange(type, index, 'name', e.target.value)}\r\n                  />\r\n                  <textarea\r\n                    value={item.description}\r\n                    onChange={(e) => handleChange(type, index, 'description', e.target.value)}\r\n                  ></textarea>\r\n                  <button className=\"save-btn\" onClick={() => handleSave(type, index)}>Save</button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <h3>{item.name}</h3>\r\n                  <p>{item.description}</p>\r\n                  <button className=\"edit-btn\" onClick={() => handleEditMode(type, index)}>Edit</button>\r\n                  <button className=\"delete-btn\" onClick={() => handleDelete(type, index)}>Delete</button>\r\n                </>\r\n              )}\r\n              <p className=\"menu-item-price\">{item.price}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      {renderItems('pizza', pizzas, setPizzas)}\r\n      {renderItems('burger', burgers, setBurgers)}\r\n      {renderItems('pasta', pastas, setPastas)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}